From 2b07de88538e79c11c04374e62769b49abe98859 Mon Sep 17 00:00:00 2001
From: vgdn1942 <vgdn1942@gmail.com>
Date: Mon, 23 Aug 2021 10:07:05 +0300
Subject: [PATCH] Add autorecord calls feature

Change-Id: I23c2e905229665c57dd31fbcab3ae688a7b24560
---
 .../dialer/app/res/values-ru/cm_strings.xml   |  1 +
# .../dialer/app/res/values/cm_strings.xml      |  2 ++
 .../dialer/app/res/xml/sound_settings.xml     |  5 ++++
 .../android/incallui/CallButtonPresenter.java | 27 +++++++++++++++++--
 4 files changed, 33 insertions(+), 2 deletions(-)

#diff --git a/java/com/android/dialer/app/res/values-ru/cm_strings.xml b/java/com/android/dialer/app/res/values-ru/cm_strings.xml
index ca4c52177..e3ff8930f 100644
#--- a/java/com/android/dialer/app/res/values-ru/cm_strings.xml
#+++ b/java/com/android/dialer/app/res/values-ru/cm_strings.xml
#@@ -27,6 +27,7 @@
#     <string name="allow">Разрешить</string>
#     <string name="deny">Отклонить</string>
#     <string name="call_recording_category_title">Запись вызова</string>
#+    <string name="call_recording_auto">Автозапись вызова</string>
#     <string name="call_recording_format">Формат аудио</string>
#     <string name="call_via">Позвонить через</string>
#     <string name="call_via_dialog_title">Позвонить через\u2026</string>
diff --git a/java/com/android/dialer/app/res/values/cm_strings.xml b/java/com/android/dialer/app/res/values/cm_strings.xml
index 84d6ef735..59189b5a8 100644
--- a/java/com/android/dialer/app/res/values/cm_strings.xml
+++ b/java/com/android/dialer/app/res/values/cm_strings.xml
@@ -34,6 +34,8 @@

     <string name="call_recording_category_key" translatable="false">call_recording_category</string>
     <string name="call_recording_category_title">Call recording</string>
+    <string name="call_recording_auto_key" translatable="false">auto_call_recording</string>
+    <string name="call_recording_auto">Auto record calls</string>
     <string name="call_recording_format_key" translatable="false">call_recording_format</string>
     <string name="call_recording_format">Audio format</string>
     <string name="wb_amr_format" translatable="false">AMR-WB</string>
diff --git a/java/com/android/dialer/app/res/xml/sound_settings.xml b/java/com/android/dialer/app/res/xml/sound_settings.xml
index aa025874f..ced97976f 100644
--- a/java/com/android/dialer/app/res/xml/sound_settings.xml
+++ b/java/com/android/dialer/app/res/xml/sound_settings.xml
@@ -83,6 +83,11 @@
       android:entryValues="@array/call_recording_encoder_values"
       android:defaultValue="0" />

+    <SwitchPreference
+      android:key="@string/call_recording_auto_key"
+      android:title="@string/call_recording_auto"
+      android:defaultValue="false" />
+
   </PreferenceCategory>

 </PreferenceScreen>
diff --git a/java/com/android/incallui/CallButtonPresenter.java b/java/com/android/incallui/CallButtonPresenter.java
index cff283c21..505fdfe2f 100644
--- a/java/com/android/incallui/CallButtonPresenter.java
+++ b/java/com/android/incallui/CallButtonPresenter.java
@@ -21,6 +21,7 @@ import android.content.Context;
 import android.content.SharedPreferences;
 import android.content.pm.PackageManager;
 import android.os.Bundle;
+import android.os.Handler;
 import android.os.Trace;
 import android.preference.PreferenceManager;
 import android.support.v4.app.Fragment;
@@ -74,6 +75,7 @@ public class CallButtonPresenter
   private DialerCall call;
   private boolean isInCallButtonUiReady;
   private PhoneAccountHandle otherAccount;
+  private boolean isRecording = false;

   private CallRecorder.RecordingProgressListener recordingProgressListener =
       new CallRecorder.RecordingProgressListener() {
@@ -114,6 +116,7 @@ public class CallButtonPresenter

     CallRecorder recorder = CallRecorder.getInstance();
     recorder.addRecordingProgressListener(recordingProgressListener);
+    inCallButtonUi.setCallRecordingState(recorder.isRecording());

     // Update the buttons state immediately for the current call
     onStateChange(InCallState.NO_CALLS, inCallPresenter.getInCallState(), CallList.getInstance());
@@ -144,6 +147,9 @@ public class CallButtonPresenter
   @Override
   public void onStateChange(InCallState oldState, InCallState newState, CallList callList) {
     Trace.beginSection("CallButtonPresenter.onStateChange");
+    CallRecorder recorder = CallRecorder.getInstance();
+    boolean isEnabled = PreferenceManager.getDefaultSharedPreferences(context)
+        .getBoolean(context.getString(R.string.call_recording_auto_key), false);
     if (call != null) {
       call.removeListener(this);
     }
@@ -152,6 +158,16 @@ public class CallButtonPresenter
     } else if (newState == InCallState.INCALL) {
       call = callList.getActiveOrBackgroundCall();

+      if (!isRecording && isEnabled && call != null) {
+        isRecording = true;
+        new Handler().postDelayed(new Runnable() {
+          @Override
+          public void run() {
+            callRecordClicked(true);
+          }
+        }, 500);
+      }
+
       // When connected to voice mail, automatically shows the dialpad.
       // (On previous releases we showed it when in-call shows up, before waiting for
       // OUTGOING.  We may want to do that once we start showing "Voice mail" label on
@@ -167,6 +183,9 @@ public class CallButtonPresenter
       }
       call = callList.getIncomingCall();
     } else {
+      if (isEnabled && recorder.isRecording()) {
+         recorder.finishRecording();
+      }
       call = null;
     }

@@ -343,12 +362,16 @@ public class CallButtonPresenter
               prefs.edit()
                   .putBoolean(KEY_RECORDING_WARNING_PRESENTED, true)
                   .apply();
-              startCallRecordingOrAskForPermission();
+              if (!recorder.isRecording()) {
+                startCallRecordingOrAskForPermission();
+              }
             })
             .setNegativeButton(android.R.string.cancel, null)
             .show();
       } else {
-        startCallRecordingOrAskForPermission();
+        if (!recorder.isRecording()) {
+          startCallRecordingOrAskForPermission();
+        }
       }
     } else {
       if (recorder.isRecording()) {
--
2.20.1
